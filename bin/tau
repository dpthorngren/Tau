#!/usr/bin/python
import argparse
import tau


if __name__ == "__main__":
    # Parse the command line arguments
    ap = argparse.ArgumentParser(description="Compiles Tau code or starts a REPL session.")
    ap.add_argument(
        "filename",
        nargs='?',
        help="The file to compile; if absent, start a REPL session.")
    ap.add_argument(
        "--debug-ir",
        action='store_true',
        help="Print IR code immediately after it is generated.")
    ap.add_argument(
        "--debug-ast",
        action='store_true',
        help="Print the string passed to initialize each abstract syntax tree node.")
    ap.add_argument(
        "--debug-lexer",
        action='store_true',
        help="Print the lexer input and output whenever lex() is called.")
    ap.add_argument(
        "--debug-memory",
        action='store_true',
        help="Print a message whenever memory is malloc'd or freed.")
    ap.add_argument(
        "--quiet",
        action='store_true',
        help="Do not print non-essential output (like REPL prompts)")
    ap.add_argument(
        "--output",
        help="The name of the compiled file to write.",
        default="a.out")
    args = ap.parse_args()

    if args.filename:
        # Startup the parser and compile the input file
        tau.compileFile(args.filename, args.output, args.debug_ir, args.debug_ast,
                        args.debug_lexer, args.debug_memory, args.quiet)
    else:
        try:
            # Create a JIT compiler and run it as a REPL until it runs out of input
            p = tau.TauJIT(args.debug_ir, args.debug_ast, args.quiet,
                           args.debug_lexer, args.debug_memory)
            p.runREPL()
        except EOFError, KeyboardInterrupt:
            print ""
